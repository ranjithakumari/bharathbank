{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ranji\\\\bharathbank\\\\client\\\\src\\\\components\\\\withdraw.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = `http://localhost:8080`;\nexport default function Withdraw() {\n  _s();\n\n  const [show, setShow] = React.useState(true);\n  const [status, setStatus] = React.useState('');\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"success\",\n    header: \"Withdraw\",\n    status: status,\n    body: show ? /*#__PURE__*/_jsxDEV(WithdrawForm, {\n      setShow: setShow,\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WithdrawMsg, {\n      setShow: setShow,\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Withdraw, \"OiPWjF7aAG19YEx9YzF5ZeGKqU4=\");\n\n_c = Withdraw;\n\nfunction WithdrawMsg(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: () => {\n        props.setShow(true);\n        props.setStatus('');\n      },\n      children: \"Withdraw again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = WithdrawMsg;\n\nfunction WithdrawForm(props) {\n  _s2();\n\n  const [amount, setAmount] = React.useState('');\n  const [balance, setBalance] = React.useState('');\n  const email = localStorage.getItem(\"Email\");\n  React.useEffect(() => {\n    // fetch all accounts from API\n    fetch(apiURL + `/account/findone/${email}`).then(response => response.text()).then(text => {\n      const data = JSON.parse(text);\n      setBalance(data.balance);\n    });\n  }, []);\n\n  function handle() {\n    if (amount > balance) {\n      alert('Insufficient Balance');\n    } else if (amount < 0) {\n      alert(\"Enter a positive value\");\n    } else {\n      fetch(apiURL + `/account/update/${email}/-${amount}`).then(response => response.text()).then(text => {\n        try {\n          const data = JSON.parse(text);\n          props.setStatus('');\n          props.setShow(false);\n          fetch(apiURL + `/account/findone/${email}`).then(response => response.text()).then(text => {\n            const data = JSON.parse(text);\n            alert('Your Current Balance is:' + data.balance);\n          });\n        } catch (err) {\n          props.setStatus('Withdraw failed');\n          console.log('err:', text);\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Amount\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      placeholder: \"Enter amount\",\n      value: amount,\n      onChange: e => setAmount(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 57\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: handle,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(WithdrawForm, \"kGl7vBOJBtO4sMl1GUY18wiU7Lw=\");\n\n_c3 = WithdrawForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Withdraw\");\n$RefreshReg$(_c2, \"WithdrawMsg\");\n$RefreshReg$(_c3, \"WithdrawForm\");","map":{"version":3,"sources":["E:/Ranji/bharathbank/client/src/components/withdraw.js"],"names":["React","useState","Card","apiURL","Withdraw","show","setShow","status","setStatus","WithdrawMsg","props","WithdrawForm","amount","setAmount","balance","setBalance","email","localStorage","getItem","useEffect","fetch","then","response","text","data","JSON","parse","handle","alert","err","console","log","e","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"./context\";\r\nconst apiURL = `http://localhost:8080`;\r\nexport default function Withdraw(){\r\n  const [show, setShow]     = React.useState(true);\r\n  const [status, setStatus] = React.useState('');  \r\n  \r\n  return (\r\n    <Card\r\n      bgcolor=\"success\"\r\n      header=\"Withdraw\"\r\n      status={status}\r\n      body={show ? \r\n        <WithdrawForm setShow={setShow} setStatus={setStatus}/> :\r\n        <WithdrawMsg setShow={setShow} setStatus={setStatus}/>}\r\n    />\r\n  )\r\n}\r\n\r\nfunction WithdrawMsg(props){\r\n  return(<>\r\n    <h5>Success</h5>\r\n    <button type=\"submit\" \r\n      className=\"btn btn-light\" \r\n      onClick={() => {\r\n        props.setShow(true);\r\n        props.setStatus('');\r\n      }}>\r\n        Withdraw again\r\n    </button>\r\n  </>);\r\n}\r\n\r\nfunction WithdrawForm(props){\r\n  const [amount, setAmount] = React.useState('');  \r\n  const [balance, setBalance] = React.useState('');\r\n  const email = localStorage.getItem(\"Email\");\r\n  React.useEffect(() => {          \r\n    // fetch all accounts from API\r\n    fetch(apiURL+`/account/findone/${email}`)\r\n  .then(response => response.text())\r\n  .then(text => \r\n    {       \r\n          const data = JSON.parse(text);\r\n          setBalance(data.balance);\r\n                 \r\n  });\r\n}, []);          \r\n\r\n  function handle(){\r\n    if (amount>balance){\r\n      alert('Insufficient Balance');            \r\n    }  \r\n    else if(amount<0){\r\n      alert(\"Enter a positive value\");\r\n    }   \r\n    \r\n    else{\r\n      fetch(apiURL+`/account/update/${email}/-${amount}`)\r\n      .then(response => response.text())\r\n      .then(text => {\r\n          try {                \r\n              const data = JSON.parse(text);\r\n              props.setStatus('');\r\n              props.setShow(false);      \r\n              fetch(apiURL+`/account/findone/${email}`)\r\n            .then(response => response.text())\r\n            .then(text => {      \r\n            const data = JSON.parse(text);      \r\n            alert('Your Current Balance is:'+ data.balance);   });          \r\n                       \r\n          } catch(err) {\r\n              props.setStatus('Withdraw failed')\r\n              console.log('err:', text);\r\n          }\r\n      });\r\n    }\r\n    \r\n  }\r\n  return(<>\r\n    Amount<br/>\r\n    <input type=\"number\" \r\n      className=\"form-control\" \r\n      placeholder=\"Enter amount\" \r\n      value={amount} \r\n      onChange={e => setAmount(e.currentTarget.value)}/><br/>\r\n\r\n    <button type=\"submit\" \r\n      className=\"btn btn-light\" \r\n      onClick={handle}>\r\n        Withdraw\r\n    </button>\r\n\r\n  </>);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
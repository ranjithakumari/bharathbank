{"ast":null,"code":"import _slicedToArray from\"E:\\\\Ranji\\\\bharathbank\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from\"react\";import Card from\"./context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var apiURL=\"http://localhost:8080\";export default function Withdraw(){var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),show=_React$useState2[0],setShow=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),status=_React$useState4[0],setStatus=_React$useState4[1];return/*#__PURE__*/_jsx(Card,{bgcolor:\"success\",header:\"Withdraw\",status:status,body:show?/*#__PURE__*/_jsx(WithdrawForm,{setShow:setShow,setStatus:setStatus}):/*#__PURE__*/_jsx(WithdrawMsg,{setShow:setShow,setStatus:setStatus})});}function WithdrawMsg(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Success\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-light\",onClick:function onClick(){props.setShow(true);props.setStatus('');},children:\"Withdraw again\"})]});}function WithdrawForm(props){var _React$useState5=React.useState(''),_React$useState6=_slicedToArray(_React$useState5,2),amount=_React$useState6[0],setAmount=_React$useState6[1];var _React$useState7=React.useState(''),_React$useState8=_slicedToArray(_React$useState7,2),balance=_React$useState8[0],setBalance=_React$useState8[1];var email=localStorage.getItem(\"Email\");React.useEffect(function(){// fetch all accounts from API\nfetch(apiURL+\"/account/findone/\".concat(email)).then(function(response){return response.text();}).then(function(text){var data=JSON.parse(text);setBalance(data.balance);});},[]);function handle(){if(amount>balance){alert('Insufficient Balance');}else if(amount<0){alert(\"Enter a positive value\");}else{fetch(apiURL+\"/account/update/\".concat(email,\"/-\").concat(amount)).then(function(response){return response.text();}).then(function(text){try{var data=JSON.parse(text);props.setStatus('');props.setShow(false);fetch(apiURL+\"/account/findone/\".concat(email)).then(function(response){return response.text();}).then(function(text){var data=JSON.parse(text);alert('Your Current Balance is:'+data.balance);});}catch(err){props.setStatus('Withdraw failed');console.log('err:',text);}});}}return/*#__PURE__*/_jsxs(_Fragment,{children:[\"Amount\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control\",placeholder:\"Enter amount\",value:amount,onChange:function onChange(e){return setAmount(e.currentTarget.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-light\",onClick:handle,children:\"Withdraw\"})]});}","map":{"version":3,"sources":["E:/Ranji/bharathbank/client/src/components/withdraw.js"],"names":["React","useState","Card","apiURL","Withdraw","show","setShow","status","setStatus","WithdrawMsg","props","WithdrawForm","amount","setAmount","balance","setBalance","email","localStorage","getItem","useEffect","fetch","then","response","text","data","JSON","parse","handle","alert","err","console","log","e","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"./context\";\r\nconst apiURL = `http://localhost:8080`;\r\nexport default function Withdraw(){\r\n  const [show, setShow]     = React.useState(true);\r\n  const [status, setStatus] = React.useState('');  \r\n  \r\n  return (\r\n    <Card\r\n      bgcolor=\"success\"\r\n      header=\"Withdraw\"\r\n      status={status}\r\n      body={show ? \r\n        <WithdrawForm setShow={setShow} setStatus={setStatus}/> :\r\n        <WithdrawMsg setShow={setShow} setStatus={setStatus}/>}\r\n    />\r\n  )\r\n}\r\n\r\nfunction WithdrawMsg(props){\r\n  return(<>\r\n    <h5>Success</h5>\r\n    <button type=\"submit\" \r\n      className=\"btn btn-light\" \r\n      onClick={() => {\r\n        props.setShow(true);\r\n        props.setStatus('');\r\n      }}>\r\n        Withdraw again\r\n    </button>\r\n  </>);\r\n}\r\n\r\nfunction WithdrawForm(props){\r\n  const [amount, setAmount] = React.useState('');  \r\n  const [balance, setBalance] = React.useState('');\r\n  const email = localStorage.getItem(\"Email\");\r\n  React.useEffect(() => {          \r\n    // fetch all accounts from API\r\n    fetch(apiURL+`/account/findone/${email}`)\r\n  .then(response => response.text())\r\n  .then(text => \r\n    {       \r\n          const data = JSON.parse(text);\r\n          setBalance(data.balance);\r\n                 \r\n  });\r\n}, []);          \r\n\r\n  function handle(){\r\n    if (amount>balance){\r\n      alert('Insufficient Balance');            \r\n    }  \r\n    else if(amount<0){\r\n      alert(\"Enter a positive value\");\r\n    }   \r\n    \r\n    else{\r\n      fetch(apiURL+`/account/update/${email}/-${amount}`)\r\n      .then(response => response.text())\r\n      .then(text => {\r\n          try {                \r\n              const data = JSON.parse(text);\r\n              props.setStatus('');\r\n              props.setShow(false);      \r\n              fetch(apiURL+`/account/findone/${email}`)\r\n            .then(response => response.text())\r\n            .then(text => {      \r\n            const data = JSON.parse(text);      \r\n            alert('Your Current Balance is:'+ data.balance);   });          \r\n                       \r\n          } catch(err) {\r\n              props.setStatus('Withdraw failed')\r\n              console.log('err:', text);\r\n          }\r\n      });\r\n    }\r\n    \r\n  }\r\n  return(<>\r\n    Amount<br/>\r\n    <input type=\"number\" \r\n      className=\"form-control\" \r\n      placeholder=\"Enter amount\" \r\n      value={amount} \r\n      onChange={e => setAmount(e.currentTarget.value)}/><br/>\r\n\r\n    <button type=\"submit\" \r\n      className=\"btn btn-light\" \r\n      onClick={handle}>\r\n        Withdraw\r\n    </button>\r\n\r\n  </>);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
[{"E:\\Ranji\\bharathbank\\client\\src\\index.js":"1","E:\\Ranji\\bharathbank\\client\\src\\App.js":"2","E:\\Ranji\\bharathbank\\client\\src\\components\\context.js":"3","E:\\Ranji\\bharathbank\\client\\src\\components\\alldata.js":"4","E:\\Ranji\\bharathbank\\client\\src\\components\\createaccount.js":"5","E:\\Ranji\\bharathbank\\client\\src\\components\\deposit.js":"6","E:\\Ranji\\bharathbank\\client\\src\\components\\navbar.js":"7","E:\\Ranji\\bharathbank\\client\\src\\components\\home.js":"8","E:\\Ranji\\bharathbank\\client\\src\\components\\login.js":"9","E:\\Ranji\\bharathbank\\client\\src\\components\\withdraw.js":"10","E:\\Ranji\\bharathbank\\client\\src\\components\\logout.js":"11"},{"size":352,"mtime":1642349173416,"results":"12","hashOfConfig":"13"},{"size":1676,"mtime":1642349173416,"results":"14","hashOfConfig":"13"},{"size":731,"mtime":1642349173416,"results":"15","hashOfConfig":"13"},{"size":2456,"mtime":1642349173416,"results":"16","hashOfConfig":"13"},{"size":3338,"mtime":1642349173416,"results":"17","hashOfConfig":"13"},{"size":2157,"mtime":1642349173416,"results":"18","hashOfConfig":"13"},{"size":2719,"mtime":1642349173416,"results":"19","hashOfConfig":"13"},{"size":404,"mtime":1642349173416,"results":"20","hashOfConfig":"13"},{"size":2987,"mtime":1642349173416,"results":"21","hashOfConfig":"13"},{"size":2584,"mtime":1642349173416,"results":"22","hashOfConfig":"13"},{"size":424,"mtime":1642349173416,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ulyf1t",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"E:\\Ranji\\bharathbank\\client\\src\\index.js",[],"E:\\Ranji\\bharathbank\\client\\src\\App.js",["55","56","57"],"import React from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\r\n\r\n\r\n// We import all the components we need in our app\r\nimport NavBar from \"./components/navbar\";\r\nimport AllData from \"./components/alldata\";\r\nimport CreateAccount from \"./components/createaccount\";\r\nimport Card from \"./components/context\";\r\nimport Deposit from \"./components/deposit\";\r\nimport Home from \"./components/home\";\r\nimport Login from \"./components/login\";\r\nimport Logout from \"./components/logout\";\r\nimport Withdraw from \"./components/withdraw\";\r\nimport Bank from \"./components/bank.png\";\r\nconst UserContext = React.createContext(null);\r\n\r\nconst apiURL = `http://localhost:8080`;\r\n\r\nconst App = () => {\r\n  \r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n          <NavBar/>        \r\n          <UserContext.Provider value={{users:[{name:'abel',email:'abel@mit.edu',password:'secret',balance:100, role:'Admin'}]}}>\r\n            <div className=\"container\" style={{padding: \"20px\"}}>\r\n            <Routes>\r\n              <Route path=\"/\" exact element={<Home/>} />\r\n              <Route path=\"/createaccount\" element={<CreateAccount/>} />\r\n              <Route path=\"/login\" element={<Login/>} />\r\n              <Route path=\"/deposit\" element={<Deposit/>} />\r\n              <Route path=\"/withdraw\" element={<Withdraw/>} />             \r\n              <Route path=\"/logout\" element={<Logout/>} />\r\n              <Route path=\"/alldata\" element={<AllData/>} />          \r\n              </Routes>\r\n            </div>\r\n          </UserContext.Provider>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  \r\n}\r\nexport default App;\r\n\r\n\r\n","E:\\Ranji\\bharathbank\\client\\src\\components\\context.js",[],"E:\\Ranji\\bharathbank\\client\\src\\components\\alldata.js",["58","59","60","61","62"],"import React from \"react\";\r\nexport default function AllData(){    \r\n\r\n    const email = localStorage.getItem(\"Email\");\r\n     \r\n    const [data, setData] = React.useState(''); \r\n    const [balance, setBalance] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n\r\n        React.useEffect(() => {          \r\n            // fetch all accounts from API\r\n            fetch('http://localhost:8080/account/all')\r\n                .then(response => response.text())\r\n                .then(text => { \r\n                    const data = JSON.parse(text);                        \r\n                        data.forEach(item => {                            \r\n                            if (item['email'] == email && item['role'] == 'guest'){                                   \r\n                                setBalance(JSON.stringify(item.balance));   \r\n                                setName(JSON.stringify(item.name));                         \r\n                            }        \r\n                            else if(item['email'] == email && item['role'] == 'Admin'){                                                      \r\n                                setData(JSON.stringify(data));                         \r\n                            }                                      \r\n                        });\r\n                      \r\n                });\r\n        }, []);          \r\n          \r\n        if(data){\r\n            return (<>        \r\n                <h5>Details</h5>                \r\n                <h6>{data}</h6>           \r\n            </>);\r\n        }\r\n        else{\r\n            return (<>\r\n                <h4>Details</h4>\r\n                <table rules=\"all\" width=\"600\" border=\"2\">  \r\n                    <thead style={{\"borderWidth\":\"2px\", 'borderColor':\"black\", 'borderStyle':'solid'}}>\r\n                        <tr align=\"center\">\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Balance</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr align=\"center\">\r\n                            <td>{name}</td>\r\n                            <td>{email}</td>\r\n                            <td>{balance}</td>\r\n                        </tr>\r\n                    </tbody> \r\n                </table>                     \r\n            </>);\r\n        }\r\n        \r\n      \r\n    }\r\n  \r\n  \r\n  \r\n    ","E:\\Ranji\\bharathbank\\client\\src\\components\\createaccount.js",["63","64","65"],"import React, { useState } from \"react\";\r\nimport Card from \"./context\";\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\n\r\nconst apiURL = `http://localhost:8080`;\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDC4nUrWNSR843JlF1rpNFHnPTj_Ya6kQw\",\r\n  authDomain: \"capstone-bank.firebaseapp.com\",\r\n  projectId: \"capstone-bank\",\r\n  storageBucket: \"capstone-bank.appspot.com\",\r\n  messagingSenderId: \"107634080259\",\r\n  appId: \"1:107634080259:web:a7554f3db39a4a5351ec36\",\r\n  measurementId: \"G-6G40XFKW41\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default function CreateAccount(){\r\n  const [show, setShow]     = React.useState(true);\r\n  const [status, setStatus] = React.useState('');\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Create Account\"\r\n      status={status}\r\n      body={show ? \r\n        <CreateForm setShow={setShow} setStatus={setStatus}/> : \r\n        <CreateMsg setShow={setShow} setStatus={setStatus}/>}\r\n    />\r\n  )\r\n}\r\nfunction CreateMsg(props){\r\n  return(<>\r\n    <h5>Your Account has been created Successfully</h5>\r\n    <button type=\"submit\" \r\n      className=\"btn btn-light\" \r\n      onClick={() => props.setShow(true)}>Add another account</button>\r\n  </>);\r\n}\r\n\r\nfunction CreateForm(props){\r\n  const [name, setName]         = React.useState('');\r\n  const [email, setEmail]       = React.useState('');\r\n  const [password, setPassword] = React.useState('');  \r\n\r\n  function handle(){\r\n    \r\n    const auth  = firebase.auth();\r\n  \r\n    const promise = auth.createUserWithEmailAndPassword(email,password);\r\n    promise.catch(e => console.log(e.message));\r\n     \r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!re.test(email) ) {\r\n      alert(\"Enter a Valid Email Address\");\r\n    }\r\n    else if (password.length < 8){\r\n      alert(\"Password should contain minimum of 8 characters\");\r\n    }\r\n    else {\r\n      const role = 'guest';\r\n      const url = apiURL+ `/account/create/${name}/${email}/${password}/${role}`;\r\n      (async () => {\r\n        var res  = await fetch(url);        \r\n        var data = await res.json();         \r\n        localStorage.setItem('Name',data.name);\r\n        localStorage.setItem('Email',data.email);  \r\n        localStorage.setItem('Role',data.role);\r\n        props.setShow(false);\r\n        props.setStatus('');\r\n      })();\r\n      \r\n      props.setStatus('User already exists');    \r\n    }  \r\n  }   \r\n  return (<>\r\n\r\n    Name<br/>\r\n    <input type=\"input\" \r\n      className=\"form-control\" \r\n      placeholder=\"Enter name\" \r\n      value={name} \r\n      onChange={e => setName(e.currentTarget.value)} /><br/>\r\n\r\n    Email address<br/>\r\n    <input type=\"email\" \r\n      className=\"form-control\" \r\n      placeholder=\"Enter email\" \r\n      value={email} \r\n      \r\n      onChange={e => setEmail(e.currentTarget.value)}/><br/>\r\n\r\n    Password<br/>\r\n    <input type=\"password\" \r\n      className=\"form-control\" \r\n      placeholder=\"Enter password\" \r\n      value={password} \r\n      onChange={e => setPassword(e.currentTarget.value)}/><br/>\r\n\r\n    <button type=\"submit\" id=\"signup\"\r\n      className=\"btn btn-light\" \r\n      disabled={!name || !email || !password}\r\n      onClick={handle}>Create Account</button>\r\n  </>);\r\n}","E:\\Ranji\\bharathbank\\client\\src\\components\\deposit.js",["66","67","68"],"import React, { useState } from \"react\";\r\nimport Card from \"./context\";\r\nconst apiURL = `http://localhost:8080`;\r\n\r\nexport default function Deposit(){\r\n  const [show, setShow]     = React.useState(true);\r\n  const [status, setStatus] = React.useState('');  \r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"warning\"\r\n      header=\"Deposit\"\r\n      status={status}\r\n      body={show ? \r\n        <DepositForm setShow={setShow} setStatus={setStatus}/> :\r\n        <DepositMsg setShow={setShow} setStatus={setStatus}/>}\r\n    />\r\n  )\r\n}\r\n\r\nfunction DepositMsg(props){\r\n  \r\n  return (<>\r\n    <h5>Success</h5>   \r\n    <button type=\"submit\" \r\n      className=\"btn btn-light\" \r\n      onClick={() => {\r\n          props.setShow(true);\r\n          props.setStatus('');\r\n      }}>\r\n        Deposit again\r\n    </button>\r\n  </>);\r\n} \r\n\r\nfunction DepositForm(props){\r\n  const [email, setEmail]   = React.useState('');\r\n  const [amount, setAmount] = React.useState('');\r\n  \r\n  function handle(){\r\n    const email = localStorage.getItem(\"Email\");    \r\n    setEmail(email);    \r\n    if (amount>0) {\r\n      fetch(apiURL+`/account/update/${email}/${amount}`)\r\n      .then(response => response.text())\r\n      .then(text => {    \r\n        try {          \r\n            const data = JSON.parse(text);            \r\n            props.setStatus('');\r\n            props.setShow(false);  \r\n            fetch(apiURL+`/account/findone/${email}`)\r\n            .then(response => response.text())\r\n            .then(text => {      \r\n            const data = JSON.parse(text);      \r\n            alert('Your Current Balance is:'+ data.balance);   });        \r\n        }             \r\n        catch(err) {\r\n          props.setStatus('Deposit failed')\r\n          console.log('err:', text);\r\n        }\r\n    });   \r\n    }\r\n    else\r\n    alert(\"Please Enter Positive Value\");\r\n  }\r\n  return(<>        \r\n    Amount<br/>\r\n    <input type=\"number\" \r\n      className=\"form-control\" \r\n      placeholder=\"Enter amount\" \r\n      value={amount} onChange={e => setAmount(e.currentTarget.value)}/><br/>\r\n\r\n    <button type=\"submit\" \r\n      className=\"btn btn-light\" \r\n      onClick={handle}>Deposit</button>\r\n\r\n  </>);\r\n}","E:\\Ranji\\bharathbank\\client\\src\\components\\navbar.js",["69","70","71","72"],"import React, { useState } from \"react\";\r\n\r\n\r\nexport default function NavBar(){   \r\n  const [user, setUser] = React.useState();  \r\n  React.useEffect(() => {\r\n  setInterval(() => {\r\n    const user = localStorage.getItem(\"Name\");\r\n    setUser(user);\r\n  },500)\r\n  },[]);\r\n\r\n  const logout = () => {\r\n    return localStorage.removeItem(\"user\");\r\n}\r\nif(!user){\r\nreturn(\r\n  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"#\">Home</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/CreateAccount/\">Create Account</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/login/\">Login</a>\r\n          </li>\r\n        </ul>            \r\n      </div>    \r\n         \r\n    </nav>\r\n  );\r\n}\r\nif(user){\r\n  return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"#\">Bharat Bank</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/CreateAccount/\">Create Account</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/login/\">Login</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/deposit/\">Deposit</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/withdraw/\">Withdraw</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/alldata/\">Balance</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/logout/\">Logout</a>\r\n          </li>   \r\n          \r\n        </ul>            \r\n      </div>    \r\n      <div>\r\n        <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">          \r\n            <label>{user}</label>\r\n          </li>         \r\n          \r\n        </ul>\r\n          \r\n        </div>  \r\n      \r\n    </nav>\r\n  );\r\n}}\r\n","E:\\Ranji\\bharathbank\\client\\src\\components\\home.js",["73","74"],"import React, { useState } from \"react\";\r\nimport Card from \"./context\";\r\nimport Bank from \"./bank.png\";\r\n\r\nexport default function Home(){\r\n  return (\r\n    <Card\r\n      txtcolor=\"black\"    \r\n      bgcolor = \"primary\"  \r\n      header=\"Bharat Bank\"\r\n      title=\"Welcome to the bank\"\r\n      body={(<img src={Bank} width=\"500rem\" className=\"img-fluid\" alt=\"Responsive image\"/>)}\r\n    />\r\n    \r\n  );  \r\n}\r\n\r\n","E:\\Ranji\\bharathbank\\client\\src\\components\\login.js",["75","76"],"import React, { useState } from \"react\";\r\nimport Card from \"./context\";\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\n\r\nconst apiURL = `http://localhost:8080`;\r\n\r\nexport default function Login(){\r\n  const [show, setShow]     = React.useState(true);\r\n  const [status, setStatus] = React.useState('');  \r\n  return (\r\n    <Card\r\n      bgcolor=\"secondary\"\r\n      header=\"Login\"\r\n      status={status}\r\n      body={show ? \r\n        <LoginForm setShow={setShow} setStatus={setStatus}/> :\r\n        <LoginMsg setShow={setShow} setStatus={setStatus}/>}\r\n    />\r\n  ) \r\n}\r\n\r\nfunction LoginMsg(props){  \r\n  return(<>\r\n    <h5>You Have Successfully logged in !!!</h5>\r\n    <button type=\"submit\" \r\n      className=\"btn btn-light\" \r\n      onClick={() => props.setShow(true)}>\r\n        Authenticate again\r\n    </button>\r\n  </>);\r\n}\r\n\r\nfunction LoginForm(props){\r\n  const [email, setEmail]       = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  \r\n  \r\n  function handle(){\r\n    fetch(apiURL+ `/account/login/${email}/${password}`)\r\n    .then(response => response.text())\r\n    .then(text => {\r\n        try {\r\n            const data = JSON.parse(text);\r\n            props.setStatus('');\r\n            props.setShow(false);\r\n                        \r\n            localStorage.setItem('Name',data.name);  \r\n            localStorage.setItem('Email',data.email);            \r\n        } catch(err) {\r\n            props.setStatus(text)\r\n            console.log('err:', text);\r\n        }\r\n    }); \r\n      const auth  = firebase.auth();  \r\n      \r\n      const promise = auth.signInWithEmailAndPassword(email, password);\r\n      promise.catch(e => console.log(e.message));\r\n      firebase.auth().onAuthStateChanged(firebaseUser => {\r\n        if(firebaseUser){\r\n          firebaseUser.getIdToken().then(idToken => {\r\n            console.log('idToken:', idToken);\r\n            (async () => {\r\n              let response = await fetch(apiURL+'/auth', {\r\n                  method: 'GET',\r\n                  headers: {\r\n                      'Authorization': idToken\r\n                  }\r\n              });\r\n              let text = await response.text();\r\n              // routeMsg.innerHTML = text;\r\n          })();\r\n         }).catch(e => console.log('e:',e));\r\n                \r\n        }\r\n        else{\r\n            console.log('User is not logged in');          \r\n        }\r\n    });\r\n    \r\n  \r\n  }\r\n  return (<>\r\n    Email<br/>\r\n    <input type=\"input\" \r\n      className=\"form-control\" \r\n      placeholder=\"Enter email\" \r\n      value={email} \r\n      onChange={e => setEmail(e.currentTarget.value)}/><br/>\r\n\r\n    Password<br/>\r\n    <input type=\"password\" \r\n      className=\"form-control\" \r\n      placeholder=\"Enter password\" \r\n      value={password} \r\n      onChange={e => setPassword(e.currentTarget.value)}/><br/>\r\n    <button id=\"login\" type=\"submit\" className=\"btn btn-light\" disabled={!email || !password}onClick={handle}>Login</button>  \r\n  </>);\r\n}","E:\\Ranji\\bharathbank\\client\\src\\components\\withdraw.js",["77","78","79"],"import React, { useState } from \"react\";\r\nimport Card from \"./context\";\r\nconst apiURL = `http://localhost:8080`;\r\nexport default function Withdraw(){\r\n  const [show, setShow]     = React.useState(true);\r\n  const [status, setStatus] = React.useState('');  \r\n  \r\n  return (\r\n    <Card\r\n      bgcolor=\"success\"\r\n      header=\"Withdraw\"\r\n      status={status}\r\n      body={show ? \r\n        <WithdrawForm setShow={setShow} setStatus={setStatus}/> :\r\n        <WithdrawMsg setShow={setShow} setStatus={setStatus}/>}\r\n    />\r\n  )\r\n}\r\n\r\nfunction WithdrawMsg(props){\r\n  return(<>\r\n    <h5>Success</h5>\r\n    <button type=\"submit\" \r\n      className=\"btn btn-light\" \r\n      onClick={() => {\r\n        props.setShow(true);\r\n        props.setStatus('');\r\n      }}>\r\n        Withdraw again\r\n    </button>\r\n  </>);\r\n}\r\n\r\nfunction WithdrawForm(props){\r\n  const [amount, setAmount] = React.useState('');  \r\n  const [balance, setBalance] = React.useState('');\r\n  const email = localStorage.getItem(\"Email\");\r\n  React.useEffect(() => {          \r\n    // fetch all accounts from API\r\n    fetch(apiURL+`/account/findone/${email}`)\r\n  .then(response => response.text())\r\n  .then(text => \r\n    {       \r\n          const data = JSON.parse(text);\r\n          setBalance(data.balance);\r\n                 \r\n  });\r\n}, []);          \r\n\r\n  function handle(){\r\n    if (amount>balance){\r\n      alert('Insufficient Balance');            \r\n    }  \r\n    else if(amount<0){\r\n      alert(\"Enter a positive value\");\r\n    }   \r\n    \r\n    else{\r\n      fetch(apiURL+`/account/update/${email}/-${amount}`)\r\n      .then(response => response.text())\r\n      .then(text => {\r\n          try {                \r\n              const data = JSON.parse(text);\r\n              props.setStatus('');\r\n              props.setShow(false);      \r\n              fetch(apiURL+`/account/findone/${email}`)\r\n            .then(response => response.text())\r\n            .then(text => {      \r\n            const data = JSON.parse(text);      \r\n            alert('Your Current Balance is:'+ data.balance);   });          \r\n                       \r\n          } catch(err) {\r\n              props.setStatus('Withdraw failed')\r\n              console.log('err:', text);\r\n          }\r\n      });\r\n    }\r\n    \r\n  }\r\n  return(<>\r\n    Amount<br/>\r\n    <input type=\"number\" \r\n      className=\"form-control\" \r\n      placeholder=\"Enter amount\" \r\n      value={amount} \r\n      onChange={e => setAmount(e.currentTarget.value)}/><br/>\r\n\r\n    <button type=\"submit\" \r\n      className=\"btn btn-light\" \r\n      onClick={handle}>\r\n        Withdraw\r\n    </button>\r\n\r\n  </>);\r\n}\r\n","E:\\Ranji\\bharathbank\\client\\src\\components\\logout.js",["80","81"],"import React, { useState } from \"react\";\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\n\r\nexport default function Logout(){    \r\n\r\n  firebase.auth().signOut();    \r\n        \r\n      return (<>\r\n          <h5>You have Successfully logged out</h5>\r\n          {localStorage.removeItem(\"Email\"),localStorage.removeItem(\"Name\"),localStorage.removeItem(\"Role\")}           \r\n      </>);\r\n    \r\n  }\r\n\r\n",{"ruleId":"82","severity":1,"message":"83","line":11,"column":8,"nodeType":"84","messageId":"85","endLine":11,"endColumn":12},{"ruleId":"82","severity":1,"message":"86","line":17,"column":8,"nodeType":"84","messageId":"85","endLine":17,"endColumn":12},{"ruleId":"82","severity":1,"message":"87","line":20,"column":7,"nodeType":"84","messageId":"85","endLine":20,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":17,"column":47,"nodeType":"90","messageId":"91","endLine":17,"endColumn":49},{"ruleId":"88","severity":1,"message":"89","line":17,"column":72,"nodeType":"90","messageId":"91","endLine":17,"endColumn":74},{"ruleId":"88","severity":1,"message":"89","line":21,"column":51,"nodeType":"90","messageId":"91","endLine":21,"endColumn":53},{"ruleId":"88","severity":1,"message":"89","line":21,"column":76,"nodeType":"90","messageId":"91","endLine":21,"endColumn":78},{"ruleId":"92","severity":1,"message":"93","line":27,"column":12,"nodeType":"94","endLine":27,"endColumn":14,"suggestions":"95"},{"ruleId":"82","severity":1,"message":"96","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":56,"column":24,"nodeType":"99","messageId":"100","endLine":56,"endColumn":25,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"98","line":56,"column":49,"nodeType":"99","messageId":"100","endLine":56,"endColumn":50,"suggestions":"102"},{"ruleId":"82","severity":1,"message":"96","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"103","line":37,"column":10,"nodeType":"84","messageId":"85","endLine":37,"endColumn":15},{"ruleId":"82","severity":1,"message":"104","line":48,"column":19,"nodeType":"84","messageId":"85","endLine":48,"endColumn":23},{"ruleId":"82","severity":1,"message":"96","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"105","line":13,"column":9,"nodeType":"84","messageId":"85","endLine":13,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":19,"column":7,"nodeType":"108","endLine":19,"endColumn":44},{"ruleId":"106","severity":1,"message":"107","line":40,"column":7,"nodeType":"108","endLine":40,"endColumn":44},{"ruleId":"82","severity":1,"message":"96","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":12,"column":14,"nodeType":"108","endLine":12,"endColumn":91},{"ruleId":"82","severity":1,"message":"96","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"111","line":70,"column":19,"nodeType":"84","messageId":"85","endLine":70,"endColumn":23},{"ruleId":"82","severity":1,"message":"96","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":48,"column":4,"nodeType":"94","endLine":48,"endColumn":6,"suggestions":"112"},{"ruleId":"82","severity":1,"message":"104","line":63,"column":21,"nodeType":"84","messageId":"85","endLine":63,"endColumn":25},{"ruleId":"82","severity":1,"message":"96","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":11,"column":44,"nodeType":"115","messageId":"116","endLine":11,"endColumn":45},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Bank' is defined but never used.","'apiURL' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'useState' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["118","119"],["120","121"],"'email' is assigned a value but never used.","'data' is assigned a value but never used.","'logout' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'text' is assigned a value but never used.",["122"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",{"desc":"123","fix":"124"},{"messageId":"125","fix":"126","desc":"127"},{"messageId":"128","fix":"129","desc":"130"},{"messageId":"125","fix":"131","desc":"127"},{"messageId":"128","fix":"132","desc":"130"},{"desc":"123","fix":"133"},"Update the dependencies array to be: [email]",{"range":"134","text":"135"},"removeEscape",{"range":"136","text":"137"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"138","text":"139"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"140","text":"137"},{"range":"141","text":"139"},{"range":"142","text":"135"},[1381,1383],"[email]",[1657,1658],"",[1657,1657],"\\",[1682,1683],[1682,1682],[1286,1288]]